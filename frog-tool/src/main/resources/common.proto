option java_package = "protobuf.clazz";
option java_outer_classname = "Common";

//平台玩法规则
message CommonAppConfigProto {
	required int32 app_id = 1;
	repeated CommonGameConfigProto configs = 2;
	optional int32 open_count = 3; // 剩下代开房出现。
}

message CommonGameConfigProto {
	required int32 game_type_index = 1;
	repeated RuleGroupConfig groups = 2;
	repeated int32 game_round = 3; //局数
	optional string name = 4; //
	repeated int32 cost_card = 5; //对应的扣逗数
	optional bool isFree = 6; // 是否免费
	optional string fun = 7;
	repeated RuleGroupConfig commonGroups = 8; // 所有子游戏通用group
	repeated int32 need_club_cost = 9; // 是否需要俱乐部扣逗 1.表示俱乐部扣逗
	repeated int32 club_cost = 10; // 俱乐部扣逗
	repeated int32 voiceCost = 11; //语音房
	optional int32 sort = 12; //排序
	repeated string lessPersonCostCfg = 13; //少人模式扣豆配置,rule:数量|rule:数量||rule:数量|....
	repeated int32 aa_cost_superior = 14; //
	repeated int32 big_cost_superior = 15; //
	repeated int32 aa_cost_self = 16; //
	repeated int32 big_cost_self = 17; //
	optional string aaCostSelfRebateRatio = 18; //AA扣豆返利比例:[1,20]:394|[21,40]:53 ...
	optional string bigCostSelfRebateRatio = 19; //大赢家扣豆返利比例:[1,20]:394|[21,40]:53 ...
	optional int32 goldType = 20; //0普通豆 1专属豆
	repeated string commonGroupComposeIdx = 21; //(存储的是ID的索引)，对公共玩法的分组 @see repeated RuleGroupConfig commonGroups = 8
	optional string bigCostScoreRange = 22 ; //大赢家低于多少分，免扣设置,区间设置[10,30]
}

message RuleGroupConfig {
	required int32 type = 1; // 0点选 1.复选 2.增减控件
	required string selectedIds = 2; // 默认选中 多个用,号分开
	required string desc = 3; // 组描述
	repeated RuleConfig rules = 4; // 角色
	optional int32 groupLine = 5; //行号
}

message RuleConfig {
	required int32 rule_index = 1; //id 和之前的game_rule对应
	required string desc = 2; //规则描述
	optional int32 line = 3; // 逻辑上显示的行号,从1开始计数,自动适配换
	optional string mode = 4; //可见状态 0任何状态可见，用逗号分隔各状态
	optional string switch = 5; //切换状态
	optional string value = 6; // 值
	optional string based = 7; // 选中时这里面ruleId 也会选上 （,分隔）
	optional string excludes = 8; // 选中时这里面配置的ruleId就不能选
	optional string tips = 9; // tips
	optional int32 ruleType = 10; //0全部游戏 子游戏1位 俱乐部2位 自建赛3位 比赛4位 代开房位5位 金币场6位
}

message CommonGameRulesProto {
	repeated CommonGameRuleProto rules = 1;
}

message CommonGameRuleProto {
	optional int32 rule_id = 1;
	optional int32 value = 2;
}

message GameRuleRequest {
	required int32 id = 1; //appid 或gameid 根据协议类型
}

// 客户端代理房间请求
message GameProxyRoomCountReuqest{

}
message GameProxyRoomCountResponse{
	optional int32 open_count = 1; // 剩下代开房出现。
}

// 告诉客户端玩法重置了
message GameRuleResetResponse{

}

message ProxyRoomAppIdsProto{
	repeated int32 appIds = 1;
}

//子游戏信息
message AppItemProto {
	required int32 appId = 1; //子游戏 appId
	required string packagepath = 2; //包名
	required string version = 3; //版本
	required string iconUrl = 4; //图标Url
	required int32 status = 5; //游戏状态;    0 未发布  1 发布;
	required int32 order = 6; //游戏的次序  展示的顺序值， 从小到大。
	required int32 flag = 7; //游戏的标记  （new、hot、活动、比赛）;
	required int32 packagesize = 8; //子游戏包的大小
	optional string downUrl = 9; //最新整包下载路径
	optional string appName = 10; //游戏名字
	optional int32 gameType = 11; //游戏类型
}

message NoticeProto {
	optional string content = 1; // 广播内容
	optional int32 broad_num = 2; // 广告次数
	optional int32 broad_type = 3; // 广播类型 1.比赛内 2.app内
	optional int32 interval = 4; // 播放间隔
}

message ChatMsgReq{
	required string chatMsg = 1;
	optional int32 chatType = 2; // 1-普通聊天 2-语音聊天
	optional bytes voiceMsg = 3; // 语音内容
}

message ChatMsgRsp{
	required string chatMsg = 1;
}

message CommonII{
	required int32 k = 1;
	required int32 v = 2;
}

message CommonIII{
	required int32 k = 1;
	required int32 v1 = 2;
	required int32 v2 = 3;
}

message CommonLI{
	required int64 k = 1;
	required int32 v = 2;
}

message CommonIL{
	required int32 k = 1;
	required int64 v = 2;
}

message CommonLL{
	required int64 k = 1;
	required int64 v = 2;
}

message CommonILI{
	required int32 k = 1;
	required int64 v1 = 2;
	optional int32 v2 = 3;
}

message CommonLII{
	required int64 k = 1;
	required int32 v1 = 2;
	optional int32 v2 = 3;
}

message CommonSII{
	required string k = 1;
	optional int32 v1 = 2;
	optional int32 v2 = 3;
}

message CommonSLI{
	required string k = 1;
	optional int64 v1 = 2;
	optional int32 v2 = 3;
}

message CommonLS{
	required int64 k = 1;
	optional string v = 2;
}

message CommonIS{
	required int32 k = 1;
	optional string v = 2;
}
message CommonRankInfoProto {
	required int32 rank = 1; //排名
	optional string head = 2; //头像
	optional string nickName = 3; //昵称
	optional int64 accountId = 4; //帐号ID
	optional string signature = 5; //签名
	optional int64 value = 6; //数值
	optional bool isDisband = 7; // 是否解散(俱乐部自建赛排行榜用)
	optional int32 online = 8; //1-在线 0-离线
}

//手机绑定/登陆
message PhoneReqProto {
	required string mobile = 1;
	required string identifyCode = 2; //校验码
}

/**
 * 游戏大类型
 */
enum GameType{
	MJ = 1; // 麻将
	PK = 2; // 扑克
	ZP = 3; // 字牌
	QT = 4; // 其他
}

//游戏功能配置请求  cmd=154
message GameFunctionConfigsReq{
	optional int32 channel = 2; //渠道   默认:xy
	optional int32 functionType = 1; //0功能开关  1功能转跳
}

//游戏功能配置请求  cmd=154
message GameFunctionConfigsResp{
	repeated GameFunctionConfigMsg msgs = 1;
	optional int32 functionType = 2; //0功能开关  1功能转跳
}

//游戏功能配置返回  cmd=154
message GameFunctionConfigMsg{
	optional int32 key = 1; //功能键值对
	optional string icon = 2; //入口图片
	optional int32 status = 3; //状态开关  0打开置灰  1打开不置灰
	optional string tip = 4; //文字提示  多条用逗号分隔
	optional string content = 5; //功能内容    如转跳类型
	optional int32 sort = 6; //排序值
	optional string closeTip = 7; //关闭时提示
	optional string closeDialogTip = 8; //关闭时弹框提示
	optional int32 fakerNum = 9; //虚拟人数
}

//游戏牌局内红包券信息请求 cmd=155
message GameRedpacketReq{
}

//游戏牌局内红包券信息返回 cmd=155
message GameRedpacketResp{
	optional int32 leftTime = 1; //剩余秒数
	optional int32 maxTime = 2; //最大秒数(周期秒数)
	optional int32 timeRewardNum = 3; //当前倒计时完毕奖励红包券数量
	optional int32 sumTimeNum = 4; //总数倒计时周期

	optional int32 dayNum = 5; //当天获得的红包券数量
	optional int32 sumNum = 6; //累积获得红包券数量
	optional int32 leftPlayNum = 7; //剩余再玩局数
	optional int32 extraRewardNum = 8; //额外奖励红包券数量
	optional bool isStop = 9; //是否停止
	optional bool isExtraReward = 10; //是否当局奖励额外奖励
	optional bool isDownCount = 11; //是否有倒计时奖励,true则继续倒计时
	optional bool isPlayNum = 12; //是否有牌局奖励,true则有额外奖励
	optional bool isReward = 13;
	optional int32 lastTimeRewardNum = 14; //上一次倒计时完毕奖励红包券数量
	optional bool isTrustee = 15;  // 是否托管
}

